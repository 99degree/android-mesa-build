name: Build Android

on:
  workflow_dispatch:
  push:
    branches:
      - master 
jobs:
  build:
    strategy:
      matrix:
        arch: ["aarch64"]
      fail-fast: false

    name: "Build for ${{matrix.arch}}"

    runs-on: ubuntu-latest

    steps:        
      - uses: actions/checkout@v4

      - name: Set Up Environment
        run: |
          sudo apt update
          sudo apt-get install -y libxrandr-dev libxxf86vm-dev libxcb-*-dev libx11-xcb-dev libxfixes-dev libdrm-dev libx11-dev
          sudo apt-get install glslang-tools libclc-18-dev libclc-18
          pip3 install mako meson ninja

      - name: Set ndkver,sdkver and work_dir
        run: |
          echo "NDK_VER=android-ndk-r27c" >> $GITHUB_ENV
          echo "SDK_VER=29" >> $GITHUB_ENV
          echo "WORK_DIR=$(pwd)" >> $GITHUB_ENV

      - name: Download and extract NDK/Mesa
        run: |
          echo "Downloading android-ndk from google server ..."
          curl https://dl.google.com/android/repository/${NDK_VER}-linux.zip --output ${NDK_VER}-linux.zip &> /dev/null
          echo "Extracting android-ndk to a folder ..."
          unzip ${NDK_VER}-linux.zip &> /dev/null
          echo "Get Mesa Repository ..."
          git clone https://gitlab.freedesktop.org/mesa/drm.git
          git clone --depth 1 --branch mesa-25.1.8 https://gitlab.freedesktop.org/mesa/mesa.git
          #cd mesa
          #git remote add 99degree https://github.com/99degree/mesa.git
          #git fetch 99degree local-mesa-25.1.8
          #git merge 99degree/local-mesa-25.1.8
          #local-mesa-25.1.8
          #cd ..
          echo "Ready!!!"

      - name: Build
        run: |
          envsubst <android-drm-${{matrix.arch}}>build-crossfile-drm
          cd drm
          meson setup "build-android" \
            --prefix=/tmp/drm-static \
            --cross-file "../build-crossfile-drm" \
            -Ddefault_library=static \
            -Dintel=disabled \
            -Dradeon=disabled \
            -Damdgpu=disabled \
            -Dnouveau=disabled \
            -Dvmwgfx=disabled \
            -Dfreedreno=enabled \
            -Dvc4=disabled \
            -Detnaviv=disabled \
            -Dfreedreno-kgsl=true
          ninja -C "build-android" install
          cd ..
          envsubst <android-${{matrix.arch}}>build-crossfile
          cd mesa
          meson setup "build-android" \
            --prefix=/tmp/mesa \
            --cross-file "../build-crossfile" \
            -Dplatforms=android \
            -Dplatform-sdk-version=33 \
            -Dandroid-stub=true \
            -Dandroid-libbacktrace=disabled \
            -Dandroid-strict=false \
            -Dxlib-lease=disabled \
            -Degl=false \
            -Dgbm=false \
            -Dglx=disabled \
            -Dllvm=false \
            -Dopengl=false \
            -Dvulkan-drivers=freedreno \
            -Dtools=drm-shim \
            -Dgallium-drivers=zink,freedreno \
            -Dfreedreno-kmds=msm \
            -Dmesa-clc=auto \
            -Dgallium-opencl=disabled \
            -Dgallium-rusticl=false \
            -Dbuildtype=release
          ninja -C "build-android" install
          mkdir /tmp/mesa/output
          mkdir /tmp/mesa/drm_shim
          cd /tmp/mesa/lib
          ls -a
          cp libOSMesa.so /tmp/mesa/output/libOSMesa_8.so || true
          cp libxatracker.so /tmp/mesa/output/libxatracker.so || true
          cp libfreedreno_noop_drm_shim.so /tmp/mesa/drm_shim/libfreedreno_noop_drm_shim.so || true
          # cp libpanfrost_noop_drm_shim.so /tmp/mesa/drm_shim/libpanfrost_noop_drm_shim.so || true
          cd ..
          find -name '*.so' -exec cp {} /tmp/mesa/output/ \; || true

      - name: Upload Mesa libraries
        uses: actions/upload-artifact@v4
        with:
          name: libOSMesa_${{matrix.arch}}
          path: /tmp/mesa/output/*.so

      - name: Upload drm_shim tools libraries
        uses: actions/upload-artifact@v4
        with:
          name: Noop_drm_shim_${{matrix.arch}}
          path: /tmp/mesa/drm_shim/*
